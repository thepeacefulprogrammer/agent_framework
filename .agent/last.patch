diff --git a/src/setup_env/__init__.py b/src/setup_env/__init__.py
new file mode 100644
--- /dev/null
+++ b/src/setup_env/__init__.py
@@ -0,0 +1,9 @@
+"""setup_env package
+
+This package is a refactor target: it centralizes the environment/setup helper
+used by the project. It is safe to import but not executed automatically.
+"""
+
+__all__ = ["check_requirements"]
+
+from .checks import check_requirements

diff --git a/src/setup_env/checks.py b/src/setup_env/checks.py
new file mode 100644
--- /dev/null
+++ b/src/setup_env/checks.py
@@ -0,0 +1,26 @@
+"""Helper checks for environment setup.
+
+This module intentionally reproduces the small logic used by the top-level
+sitecustomize so that behavior remains unchanged while code is moved under
+src/ for cleaner organization.
+"""
+from pathlib import Path
+from typing import List
+
+
+def list_requirements(path: str = "requirements.txt") -> List[str]:
+    p = Path(path)
+    if not p.exists():
+        return []
+    return [l.strip() for l in p.read_text().splitlines() if l.strip() and not l.strip().startswith('#')]
+
+
+def check_requirements(path: str = "requirements.txt", package_substr: str = "pygame") -> None:
+    """Raise AssertionError if requirements.txt doesn't list a package substring.
+
+    Kept intentionally small and compatible with the existing import-time
+    replacement performed by sitecustomize in the repository root.
+    """
+    reqs = list_requirements(path)
+    assert reqs, f"{path} must exist and list dependencies"
+    assert any(package_substr in r for r in reqs), f"{package_substr} must be listed in {path}"
